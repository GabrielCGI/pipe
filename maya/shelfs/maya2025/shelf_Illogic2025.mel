global proc shelf_Illogic2025 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "BOB" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "BOB" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/bob.png" 
        -image1 "R:/pipeline/pipe/maya/icons/bob.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nfrom common import utils\n\nutils.unload_packages(silent=True, package=\"bug_out_bag\")\nimportlib.import_module(\"bug_out_bag\")\nfrom bug_out_bag.BobApp import BobApp\ntry:\n    bob.close()\nexcept:\n    pass\nbob = BobApp()\nbob.show()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Asset Browser" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Asset Browser" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/asset_browser.png" 
        -image1 "R:/pipeline/pipe/maya/icons/asset_browser.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import assetBrowser\nimport importlib\nimportlib.reload(assetBrowser)\n\ntry:\n    ui.deleteLater()\nexcept:\n    pass\nui = assetBrowser.AssetBrowser()\nui.create()\nui.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\ncmds.file( 'R:/lib/3d/studio_v2/studio_v2.mb', r=True )\n#cmds.file( 'R:/lib/3d/studio/studio.mb', rr=True )" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\ncmds.file( 'R..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/studiov2.png" 
        -image1 "R:/pipeline/pipe/maya/icons/studiov2.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\ncmds.file( 'R:/lib/3d/studio_v2/studio_v2.mb', r=True )\n#cmds.file( 'R:/lib/3d/studio/studio.mb', rr=True )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\n\ncmds.file( 'R:/lib/3d/studio_v2/studio_v2.mb', rr=True )" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\n\ncmds.file( '..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/studiov2off.png" 
        -image1 "R:/pipeline/pipe/maya/icons/studiov2off.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import maya.mel as mel\nimport maya.cmds as cmds\n\n\n\n\ncmds.file( 'R:/lib/3d/studio_v2/studio_v2.mb', rr=True )" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import webbrowser\n\nurl = \"https://illogic-studios.cg-wire.com/\"  # Replace with your desired URL\nwebbrowser.open(url)\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import webbrowser\n\nurl = \"https://illogic-studios.cg-wire.com/\" ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/logo-kitsu.de716c4b.png" 
        -image1 "R:/pipeline/pipe/maya/icons/logo-kitsu.de716c4b.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import webbrowser\n\nurl = \"https://illogic-studios.cg-wire.com/\"  # Replace with your desired URL\nwebbrowser.open(url)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Enable autosave" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "def setup_autosave():\n    autosave_dir = \"D:/_save_maya\"\n    if ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "AUTO" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "save.png" 
        -image1 "save.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "def setup_autosave():\n    autosave_dir = \"D:/_save_maya\"\n    if not os.path.exists(autosave_dir):\n        try:\n            os.makedirs(autosave_dir)\n            destination = 1\n        except:\n            destination = 0\n\n    cmds.autoSave(enable=True)\n    cmds.autoSave(limitBackups=True)\n    cmds.autoSave(maxBackups=5)\n    cmds.autoSave(destination=1)  # 1 for local directory\n    cmds.autoSave(folder=autosave_dir)\n    cmds.confirmDialog(message=\"Auto save on!\")\nsetup_autosave()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import webbrowser\n\nurl = \"https://illogic.notion.site/Wiki-2f062f644c404c19b3f74aca2f7aab05\"  # Replace with your desired URL\nwebbrowser.open(url)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import webbrowser\n\nurl = \"https://illogic.notion.site/Wiki-2f062..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/icons/notion.png" 
        -image1 "R:/pipeline/pipe/maya/icons/notion.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import webbrowser\n\nurl = \"https://illogic.notion.site/Wiki-2f062f644c404c19b3f74aca2f7aab05\"  # Replace with your desired URL\nwebbrowser.open(url)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\nimport maya.mel as mel\n\ndef open_maya_scene():\n    # Prompt the user for a string input (path to the Maya scene)\n    scene_path = cmds.promptDialog(\n        title='Open Maya Scene',\n        message='Enter the path to the Maya scene:',\n        button=['OK', 'Cancel'],\n        defaultButton='OK',\n        cancelButton='Cancel',\n        dismissString='Cancel'\n    )\n\n    if scene_path == 'OK':\n        # Get the input text\n        scene_path = cmds.promptDialog(query=True, text=True)\n\n        # Check if the path is not empty\n        if scene_path:\n            # Open the Maya scene with the specified options\n            try:\n                cmds.file(scene_path, o=True, ignoreVersion=True, loadReferenceDepth=\"none\", f=True)\n\n            except Exception as e:\n                cmds.confirmDialog(title='Error', message='Failed to open scene:\\n{}'.format(e), button=['OK'])\n\nopen_maya_scene()\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import maya.cmds as cmds\nimport maya.mel as mel\n\ndef open_maya_s..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "openScript.png" 
        -image1 "openScript.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import maya.cmds as cmds\nimport maya.mel as mel\n\ndef open_maya_scene():\n    # Prompt the user for a string input (path to the Maya scene)\n    scene_path = cmds.promptDialog(\n        title='Open Maya Scene',\n        message='Enter the path to the Maya scene:',\n        button=['OK', 'Cancel'],\n        defaultButton='OK',\n        cancelButton='Cancel',\n        dismissString='Cancel'\n    )\n\n    if scene_path == 'OK':\n        # Get the input text\n        scene_path = cmds.promptDialog(query=True, text=True)\n\n        # Check if the path is not empty\n        if scene_path:\n            # Open the Maya scene with the specified options\n            try:\n                cmds.file(scene_path, o=True, ignoreVersion=True, loadReferenceDepth=\"none\", f=True)\n\n            except Exception as e:\n                cmds.confirmDialog(title='Error', message='Failed to open scene:\\n{}'.format(e), button=['OK'])\n\nopen_maya_scene()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\nimport maya.cmds as cmds\n\n# Create the top-level group\nif not cmds.objExists('maya_world'):\n    maya_world = cmds.group(em=True, name='maya_world')\nelse:\n    maya_world = 'maya_world'\n\n# Create the 'assets' group under 'maya_world'\nif not cmds.objExists('assets'):\n    assets = cmds.group(em=True, name='assets', parent=maya_world)\nelse:\n    assets = 'assets'\n\n# Create the 'Character' group under 'assets'\nif not cmds.objExists('Character'):\n    character = cmds.group(em=True, name='Character', parent=assets)\n\n# Create the 'Prop' group under 'assets'\nif not cmds.objExists('Prop'):\n    prop = cmds.group(em=True, name='Prop', parent=assets)\n\nprint(\"Hierarchy created successfully.\")\n\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\nimport maya.cmds as cmds\n\n# Create the top-level group\nif not c..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "group.png" 
        -image1 "group.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import initAnim\nimport importlib\nimportlib.reload(initAnim)\n\ninitAnim.run()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import subprocess\n\nmayapy_path = \"C:\\\\Program Files\\\\Autodesk\\\\Maya2025\\\\bin\\\\mayapy.exe\"\ncommand = [mayapy_path, \"-m\", \"pip\", \"install\", \"R:/pipeline/networkInstall/pymel/pymel-1.4.1b1-py2.py3-none-any.whl\"]\n\ntry:\n    subprocess.check_call(command)\n    print(\"PyMEL installed successfully!\")\nexcept subprocess.CalledProcessError:\n    print(\"Failed to install PyMEL.\")" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import subprocess\n\nmayapy_path = \"C:\\\\Program Files\\\\Autodesk\\\\M..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "PYMEL" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import subprocess\n\nmayapy_path = \"C:\\\\Program Files\\\\Autodesk\\\\Maya2025\\\\bin\\\\mayapy.exe\"\ncommand = [mayapy_path, \"-m\", \"pip\", \"install\", \"R:/pipeline/networkInstall/pymel/pymel-1.4.1b1-py2.py3-none-any.whl\"]\n\ntry:\n    subprocess.check_call(command)\n    print(\"PyMEL installed successfully!\")\nexcept subprocess.CalledProcessError:\n    print(\"Failed to install PyMEL.\")" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Studio Library" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src\\studiolibrary\\resource\\icons\\icon.png" 
        -image1 "R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src\\studiolibrary\\resource\\icons\\icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "\n# -----------------------------------\n# Studio Library\n# www.studiolibrary.com\n# -----------------------------------\n\nimport os\nimport sys\n    \nif not os.path.exists(r'R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src'):\n    raise IOError(r'The source path \"R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src\" does not exist!')\n    \nif r'R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src' not in sys.path:\n    sys.path.insert(0, r'R:\\pipeline\\networkInstall\\studiolibrary-2.16.0\\src')\n    \nimport studiolibrary\nstudiolibrary.main()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import sys\nmyPath = r\"R:\\softs\\animBot\\2_5_1\"\nif myPath not in sys.path: sys.path.insert(0, myPath)\nimport animBot\nanimBot.toggle()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "AnimBot" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/softs/animBot/2_5_1/animBot/_resources/img/graphic/animBot_message_icon.png" 
        -image1 "R:/softs/animBot/2_5_1/animBot/_resources/img/graphic/animBot_message_icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import sys\nmyPath = r\"R:\\pipeline\\networkInstall\\animBot\\animBot_2_5_1_Ongoing\"\nif myPath not in sys.path: sys.path.insert(0, myPath)\nimport animBot\nanimBot.toggle()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import maya.cmds as cmds\n\ntry:\n    cmds.loadPlugin('tweener.py')\nexcept:\n    pass\n\nif cmds.pluginInfo('tweener.py', q=True, registered=True):\n    if cmds.pluginInfo('tweener.py', q=True, loaded=False):\n        cmds.loadPlugin('tweener.py')\n    cmds.tweener()\nelse:\n    cmds.warning('tweener.py is not registered')" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Tweener" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/scripts/tweener/icons/tweener-icon.png" 
        -image1 "R:/pipeline/pipe/maya/scripts/tweener/icons/tweener-icon.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import maya.cmds as cmds\n\ntry:\n    cmds.loadPlugin('tweener.py')\nexcept:\n    pass\n\nif cmds.pluginInfo('tweener.py', q=True, registered=True):\n    if cmds.pluginInfo('tweener.py', q=True, loaded=False):\n        cmds.loadPlugin('tweener.py')\n    cmds.tweener()\nelse:\n    cmds.warning('tweener.py is not registered')" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import gf_animUI.setup as animUI\nfrom gf_animtools.tools.anim_ui import ExtendedAnimWindow\n\nanimLauncherUI = animUI.ui.AnimLauncherDialog(ExtendedAnimWindow)\nanimLauncherUI.show()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import gf_animUI.setup as animUI\nfrom gf_animtools.tools.anim_ui..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "PICKER" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "rigidBind.png" 
        -image1 "rigidBind.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import gf_animUI.setup as animUI\nfrom gf_animtools.tools.anim_ui import ExtendedAnimWindow\n\nanimLauncherUI = animUI.ui.AnimLauncherDialog(ExtendedAnimWindow)\nanimLauncherUI.show()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import sys\nmyPath = r\"I:\\Guerlain_Xmas25\\04_Resources\\scripts\"\nif myPath not in sys.path: sys.path.insert(0, myPath)\nimport importlib\n\n\nimport performanceCharacters\nimportlib.reload(performanceCharacters)\nperformanceCharacters.run()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import sys\nmyPath = r\"I:\\Guerlain_Xmas25\\04_Resources\\scripts\"\ni..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SD" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "character.svg" 
        -image1 "character.svg" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import sys\nmyPath = r\"I:\\Guerlain_Xmas25\\04_Resources\\scripts\"\nif myPath not in sys.path: sys.path.insert(0, myPath)\nimport importlib\n\n\nimport performanceCharacters\nimportlib.reload(performanceCharacters)\nperformanceCharacters.run()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Enable Color Management." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Enable Color Management" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Color Management" 
        -overlayLabelColor 0.8125 0.8125 0.8125 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "R:/pipeline/pipe/maya/scripts/enable_color_management/ressource/color-wheel.png" 
        -image1 "R:/pipeline/pipe/maya/scripts/enable_color_management/ressource/color-wheel.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "int $currentState = `optionVar -query \"colorManagementEnable\"`;\noptionVar -intValue \"colorManagementEnable\" (! $currentState);\n\ncolorManagementPrefs -edit -cmEnabled (! $currentState);\n\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import importlib\nimport update_assets_USD\nimport update_assets_USD.update_assets_USD\n\nimportlib.reload(update_assets_USD.update_assets_USD)\nimportlib.reload(update_assets_USD)\n\nupdate_assets_USD.show_usda_updater_in_maya()" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "import importlib\nimport update_assets_USD\nimport update_assets_U..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "USD.svg" 
        -image1 "USD.svg" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "import importlib\nimport update_assets_USD\nimport update_assets_USD.update_assets_USD\n\nimportlib.reload(update_assets_USD.update_assets_USD)\nimportlib.reload(update_assets_USD)\n\nupdate_assets_USD.show_usda_updater_in_maya()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
